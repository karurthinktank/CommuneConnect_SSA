# Generated by Django 5.1.3 on 2024-11-25 14:48

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('father_or_husband', models.CharField(blank=True, max_length=250, null=True)),
                ('member_id', models.IntegerField(unique=True)),
                ('id_card_no', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('trust_card_no', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('family_card_no', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('mobile_number', models.CharField(blank=True, max_length=10, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('receipt_no', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=10)),
                ('receipt_date', models.DateField(null=True)),
                ('receipt_book_no', models.IntegerField()),
                ('is_charity_member', models.BooleanField(default=False)),
                ('charity_registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('current_address', models.TextField()),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('country', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('taluk', models.CharField(blank=True, max_length=50, null=True)),
                ('panchayat', models.CharField(blank=True, max_length=50, null=True)),
                ('village', models.CharField(blank=True, max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=50, null=True)),
                ('secondary_mobile_number', models.CharField(blank=True, max_length=10, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('international_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('std_code', models.CharField(blank=True, max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('profile_image', models.JSONField(null=True)),
                ('is_profile_completed', models.BooleanField(default=False)),
                ('is_card_mapped', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(null=True)),
                ('created_by', models.CharField(max_length=100)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scripts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('script_name', models.CharField(blank=True, max_length=150, null=True)),
                ('script_path', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TMSUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FamilyMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('aadhar_no', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=10, null=True)),
                ('gender', models.CharField(max_length=10)),
                ('relationship', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(null=True)),
                ('martial_status', models.CharField(blank=True, max_length=50, null=True)),
                ('occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('career_reference', models.CharField(blank=True, max_length=50, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=20, null=True)),
                ('card_details', models.CharField(blank=True, max_length=50, null=True)),
                ('deleted', models.BooleanField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(null=True)),
                ('created_by', models.CharField(max_length=100)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('people', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.people')),
            ],
        ),
    ]
